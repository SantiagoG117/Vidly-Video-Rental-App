@model dynamic

@{
	ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
	<div class="form-group mb-3">
		<label>Customer</label>
		<div class="tt-container">
			<input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
		</div>
	</div>

	<div class="form-group mb-3"> 
		<label>Movie</label>
		<div class="tt-container">
			<input id="movie" name="movie" data-rule-validMovie="true" type="text" value="" class="form-control" />
		</div>
	</div>

	<div class="row">
		<!--
		Bootstrap divides the screen into 12 columns. md means medium size display system and 4 means this
		particular column should take a third of the screen size
		-->
		<div class="col-md-4">
			<!--Placeholder for a the list of movies selected by the user-->
			<ul id="movies" class="list-group mb-3"></ul>
		</div>
	</div>

	<button class="btn btn-primary">Submit</button>
</form>
@section scripts{
	@Scripts.Render("~/bundles/jqueryval")
	<script>
		$(document).ready(function () {

			//View model on the client side with customer ID and list of Movies id to be sent to the web API
			let vm = {

				movieIds: []
			};

			@*Suggestion event for customers*@
			var customers = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '/api/customers?query=%QUERY',
					wildcard: '%QUERY'
				}
			});

			$('#customer').typeahead({
				minLength: 2,
				highlight: true
				}, {
				name: 'customers',
				display: 'Name',
				source: customers
			})
				@*Handle the selection event of type ahead*@
				.on("typeahead:select", function (e, customer) {
				vm.customerId = customer.Id;
			});


			@*Suggestion event for Movies*@
			var movies = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.obj.whitespace('Name'),
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				remote: {
					url: '/api/movies?query=%QUERY',
					wildcard: '%QUERY'
				}
			});

			$('#movie').typeahead({
				minLength: 2,
				highlight: true
			}, {
				name: 'movies',
				display: 'Name',
				source: movies
			})
				@* Handle the selection event of type ahead*@
				.on("typeahead:select", function (e, movie) {
				@*Populate the list of movies with each movie selected by the user*@
				$("#movies").append("<li class='list-group-item'>" + movie.Name + "</li>");

				@*Clear the text box after each selection*@
				$("#movie").typeahead("val", "");

				@*Add selected movie to the array list in the view model*@
				vm.movieIds.push(movie.Id);
			});


			//Custom validator for customers using the validation plugin of JQuery:
			$.validator.addMethod("validCustomer", function () {
				//Make sure that the view model has a customerId property and that the customerId has a numeric value
				//different from 0
				return vm.customerId && vm.customerId !== 0;
			}, "Please select a valid customer.");

			//Custom validator for movies using the validation plugin of JQuery:
			$.validator.addMethod("validMovie", function () {
				// Make sure that the user selects at least one movie
				return vm.movieIds.length > 0;
			}, "Please select at least one movie.");

			//Validation plug-in:
			var validator = $("#newRental").validate({
				//If the form is valid, this function will be called to submit the form to the server
				submitHandler: function () {
					//Ajax post-request to be triggered when the form gets submitted
					$.ajax({
						url: "/api/rentals",
						method: "post",
						data: vm
					})
					.done(function () {
						toastr.success("Rentals successfully recorded");

						//Clear the form:
                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");

						//Clear the list of movies:
                        $("#movies").empty();

						//Reset the view model
                        vm = { movieIds: [] };

						//Reset the validation state of the form
                        validator.resetForm();
					})
					.fail(function () {
						toastr.error("Something unexpected happened");
					});

					return false;//Prevents the form from being sumbitted as a traditional HTML form
				}
			});
		});

	</script>
}
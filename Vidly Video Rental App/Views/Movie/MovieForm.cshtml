@model Vidly_Video_Rental_App.ViewModels.MovieFormViewModel
@{
	ViewBag.Title = Model.Title;
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Title</h2>

@using (Html.BeginForm("Save", "Movie"))
{
	@Html.ValidationSummary()
	<!--Movie Name-->
	<div class="form-group mb-3">
		@Html.LabelFor(m => m.Name)
		@Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.Name)
	</div>

	<!--Genres-->
	<div class="form-group mb-3">
		@Html.LabelFor(m => m.Genres)
		@Html.DropDownListFor(m => m.GenreId,
			new SelectList(Model.Genres, "Id", "Name"),
			"Select Genre",
			new { @class = "form-control" }
			)
		@Html.ValidationMessageFor(m => m.GenreId)
	</div>

	<!--Release Date-->
	<div class="form-group mb-3">
		@Html.LabelFor(m => m.ReleaseDate)
		@Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.ReleaseDate)
	</div>

	<!--Number in stock-->
	<div class="form-group mb-3">
		@Html.LabelFor(m => m.NumberInStock)
		@Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
		@Html.ValidationMessageFor(m => m.NumberInStock)
	</div>

	<!--
	Necessary for update a Movie: We don't have a field for customerId, so we pass it to the
	Save Action through a Hidden field.
	-->

	<!--
	Anti Forgery token: Ensures that the POST request only comes from the customer form and not from an external
	website.

	This token will be send as a hidden field and will be created as a cookie at the user's computer. When the user
	post a form, the application will compare both the hidden token and the cookie. If they don't match, no data will
	be saved.
	-->
	@Html.AntiForgeryToken()

	<!--Save Button-->
	<p></p>
	<button type="submit" class="btn btn-primary">Save</button>

}

@section scripts
{
	@Scripts.Render("~/bundles/jqueryval")
}
